# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: ESHOPONWEB-CICD2
trigger:
- master
resources:
 repositories:
   - repository: self
     trigger: none

stages:
  - stage: Build
    displayName: Build
    jobs:
      - job: Build
        pool:
          vmImage: ubuntu-latest
        steps:
        - task: DotNetCoreCLI@2
          displayName: restore
          inputs:
           command: 'restore'
           projects: '**/*.sln'
           feedsToUse: 'select'
         
        - task: DotNetCoreCLI@2
          displayName: Build
          inputs:
           command: 'build'
           projects: '**/*.sln'

        - task: DotNetCoreCLI@2
          displayName: Unit-Test	
          inputs:
           command: 'test'
           projects: 'tests/UnitTests/*.csproj'

        - task: DotNetCoreCLI@2
          displayName: publish
          inputs:
           command: 'publish'
           publishWebProjects: true
           arguments: '-o $(Build.ArtifactStagingDirectory'

        - task: PublishBuildArtifacts@1
          displayName: Publish Artifacts
          inputs:
           PathtoPublish: '$(Build.ArtifactStagingDirectory'
           ArtifactName: RetailApp

  - stage: Deployment
    displayName: Dev-Env
    jobs:
      - job: Deploy
        pool:
          vmImage: Windows-latest
        steps:
          - task: DownloadBuildArtifacts@1
            inputs:
             buildType: 'current'
             downloadType: 'single'
             artifactName: 'RetailApp'
             downloadPath: '$(Build.ArtifactStagingDirectory)'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: AzureRM
              azureSubscription: 'eshopdeploy'
              appType: webApp
              WebAppName: 'prkwebapp10'
              packageForLinux: '$(Build.ArtifactStagingDirectory)/**/Web.zip'

  # - stage: Deployment_QA
  #   displayName: QA_Env
  #   jobs:
  #     - job: Deploy
  #       pool:
  #         vmImage: Windows-latest
  #       steps:
  #         - task: DownloadBuildArtifacts@1
  #           inputs:
  #            buildType: 'current'
  #            downloadType: 'single'
  #            artifactName: 'RetailApp'
  #            downloadPath: '$(Build.ArtifactStagingDirectory)'
  #         - task: AzureRmWebAppDeployment@4
  #           inputs:
  #            ConnectionType: AzureRM
  #            azureSubscription: 'eshopdeploy'
  #            appType: webApp
  #            WebAppName: 'prkwebapp11'
  #            packageForLinux: '$(Build.ArtifactStagingDirectory)/**/Web.zip'

  - stage: Deployment_QA
    displayName: QA_Env
    jobs:
    - deployment: Deploy
      environment: QA-Env
      pool:
        vmImage: Windows-latest
      strategy: 
       runOnce:
         deploy:
          steps:
          - task: DownloadBuildArtifacts@1
            inputs:
             buildType: 'current'
             downloadType: 'single'
             artifactName: 'RetailApp'
             downloadPath: '$(Build.ArtifactStagingDirectory)'
          - task: AzureRmWebAppDeployment@4
            inputs:
             ConnectionType: AzureRM
             azureSubscription: 'eshopdeploy'
             appType: webApp
             WebAppName: 'prkwebapp11'
             packageForLinux: '$(Build.ArtifactStagingDirectory)/**/Web.zip'



